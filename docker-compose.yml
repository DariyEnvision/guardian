version: "3.8"
services:
  mongo:
    image: mongo:6.0.3
    command: "--setParameter allowDiskUseByDefault=true"
    restart: always
    expose:
      - 27017

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    expose:
      - 8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_SITE_BASEURL: /mongo-admin
    depends_on:
      - mongo

  ipfs-node:
    image: ipfs/kubo:v0.17.0
    ports:
      - "5001:5001"
      - "5002:5002"
      - "4001:4001"
      - "4002:4002"
      - "8080:8080"
      - "8081:8081"

  api-docs:
    build:
      context: .
      dockerfile: ./api-docs/Dockerfile
    expose:
      - 3001

  message-broker:
    image: nats:2.9.8
    expose:
      - 4222
    ports:
      - '8222:8222'
    command: '--http_port 8222'

  vault:
    image: vault:1.12.2
    expose:
      - 8200
    ports:
      - '8200:8200'
    environment:
      VAULT_SERVER: "http://0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: "1234"
    cap_add:
      - IPC_LOCK
    volumes:
      - ./file:/vault/file:rw
      - ./config:/vault/config:rw

  logger-service:
    build:
      context: .
      dockerfile: ./logger-service/Dockerfile
    depends_on:
      - message-broker

  worker-service-1:
    build:
      context: .
      dockerfile: ./worker-service/Dockerfile
    depends_on:
      - ipfs-node
      - auth-service
    environment:
      SERVICE_CHANNEL: worker.1

  worker-service-2:
    build:
      context: .
      dockerfile: ./worker-service/Dockerfile
    depends_on:
      - ipfs-node
      - auth-service
    environment:
      SERVICE_CHANNEL: worker.2

  worker-service-3:
    build:
      context: .
      dockerfile: ./worker-service/Dockerfile
    depends_on:
      - ipfs-node
      - auth-service
    environment:
      SERVICE_CHANNEL: worker.3

  worker-service-4:
    build:
      context: .
      dockerfile: ./worker-service/Dockerfile
    depends_on:
      - ipfs-node
      - auth-service
    environment:
      SERVICE_CHANNEL: worker.4

  worker-service-5:
    build:
      context: .
      dockerfile: ./worker-service/Dockerfile
    depends_on:
      - ipfs-node
      - auth-service
    environment:
      SERVICE_CHANNEL: worker.5
      IPFS_STORAGE_API_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDZhY0FFMmM3QjA5ODdCMjU1ZGZFMjMxZTA0YzI5NDZBZWI0YzE5NkQiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NjAwNzIyNzg4MDgsIm5hbWUiOiJ0ZXN0In0.vzt0-vBlbKiUSeyBZ6i3qTBKVMR3RL7CnkEXVNqvSH4

  worker-service-6:
    build:
      context: .
      dockerfile: ./worker-service/Dockerfile
    depends_on:
      - ipfs-node
      - auth-service
    environment:
      SERVICE_CHANNEL: worker.6

  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    depends_on:
      - mongo
      - vault
      - message-broker
      - logger-service

  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    expose:
      - 3002
    depends_on:
      - mongo
      - message-broker
      - guardian-service
      - auth-service
      - logger-service

  policy-service:
    build:
      context: .
      dockerfile: ./policy-service/Dockerfile
    depends_on:
      - mongo
      - message-broker
      - auth-service
      - logger-service

  guardian-service:
    build:
      context: .
      dockerfile: ./guardian-service/Dockerfile
    depends_on:
      - mongo
      - message-broker
      - auth-service
      - logger-service
      - worker-service-1
      - worker-service-2
      - policy-service
    environment:
      OPERATOR_ID: 0.0.10295
      OPERATOR_KEY: 302e020100300506032b65700422042022c85d6c64bda64aa458cf715314c5469b3b84c58690470f5289cbada3af8dfb

  mrv-sender:
    build:
      context: .
      dockerfile: ./mrv-sender/Dockerfile
    expose:
      - 3005

  topic-viewer:
    build:
      context: .
      dockerfile: ./topic-viewer/Dockerfile
    expose:
      - 3006

  web-proxy:
    build:
      context: .
      dockerfile: ./web-proxy/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - guardian-service
      - auth-service
      - api-gateway
      - api-docs
      - mrv-sender
      - mongo-express
volumes:
  mongo:
  # volume-guardian-service:
  # volume-ui-service:
  # volume-mrv-sender:
  #  volume-message-broker:
